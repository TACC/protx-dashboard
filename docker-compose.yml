version: "3"
services:
  cms:
    image: ${CMS_IMAGE}:${CMS_TAG}
    volumes:
      - ./conf/cms/secrets.sample.py:/code/taccsite_cms/secrets.py
      - ./conf/uwsgi/uwsgi_cms.ini:/code/uwsgi.ini
      - /var/www/portal/cms/static:/code/static
      - /var/www/portal/cms/media:/code/media
    command: ["uwsgi", "--ini", "uwsgi.ini"]
    container_name: core_portal_cms
    depends_on:
      - postgrescms

  nginx:
    image: nginx
    volumes:
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./conf/nginx/protx.location.conf:/etc/nginx/conf.d/protx.location.conf
      - ./conf/uwsgi/uwsgi_params:/etc/nginx/uwsgi_params
      - ./conf/certificates/dhparam.pem:/etc/ssl/dhparam.pem
      - ./conf/certificates/cep.dev.crt:/etc/ssl/certs/portal.cer
      - ./conf/certificates/cep.dev.key/:/etc/ssl/private/portal.key
      - /var/www/portal/cms/static:/var/www/portal/cms/static
      - /var/www/portal/cms/media:/var/www/portal/cms/media
      - /var/www/portal/portal/media:/var/www/portal/portal/media
      - /var/www/portal/portal/static:/var/www/portal/portal/static
    ports:
      - 80:80
      - 443:443
    container_name: core-portal-nginx # no underscores to allow for requests from another containers
    depends_on:
      - cms
      - django

  memcached:
    image: memcached:latest
    command: ["-m", "1024m"]
    container_name: core_portal_memcached
    restart: always

  redis:
    image: redis:5.0
    volumes:
      - core_portal_redis_data:/data
    container_name: core_portal_redis

  rabbitmq:
    image: rabbitmq:3.7.17-management
    volumes:
      - core_portal_rabbitmq_data:/var/lib/rabbitmq/mnesia/rabbit@core_portal_rabbitmq
    env_file: ./conf/rabbitmq/rabbitmq.env
    container_name: core_portal_rabbitmq

  websockets:
    image: ${PORTAL_IMAGE}:${PORTAL_TAG}
    command: 'daphne -b 0.0.0.0 -p 9000 -e ssl:443:privateKey=/etc/ssl/private/portal.key:certKey=/etc/ssl/certs/portal.cer --root-path=/srv/www/portal/server --access-log - --proxy-headers portal.asgi:application'
    volumes:
      - ./conf/certificates/cep.dev.crt:/etc/ssl/certs/portal.cer
      - ./conf/certificates/cep.dev.key/:/etc/ssl/private/portal.key
      - ./conf/portal/settings_secret.py:/srv/www/portal/server/portal/settings/settings_secret.py
    container_name: core_portal_websockets

  django:
    image: ${PORTAL_IMAGE}:${PORTAL_TAG}
    volumes:
      - ./conf/portal/settings_secret.py:/srv/www/portal/server/portal/settings/settings_secret.py
      - ./conf/portal/settings_custom.py:/srv/www/portal/server/portal/settings/settings_custom.py
      - /var/www/portal/portal/media:/srv/www/portal/server/media
      - /var/www/portal/portal/static:/srv/www/portal/server/static
     # uwsgi is not working in a development environment as containers
     # are making non-secure (i.e. http) requests to other containers
     # - ./conf/uwsgi/uwsgi_core.ini:/srv/www/portal/server/conf/uwsgi/uwsgi_core.ini
    dns:
      - 8.8.8.8
      - 8.8.4.4
    stdin_open: true
    tty: true
    # uwsgi is not working in a development environment as containers
    # are making non-secure (i.e. http) requests to other containers
    #command: uwsgi --ini /srv/www/portal/server/conf/uwsgi/uwsgi_core.ini
    command: python manage.py runserver --noasgi 0.0.0.0:6000
    container_name: core_portal_django

  workers:
    image: ${PORTAL_IMAGE}:${PORTAL_TAG}
    volumes:
      - ./conf/portal/settings_secret.py:/srv/www/portal/server/portal/settings/settings_secret.py
    command: "celery -A portal worker -Q default,indexing,files,api,onboard --concurrency=10"
    container_name: core_portal_workers

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    ulimits:
      memlock: -1
    environment:
      - ES_HEAP_SIZE:1g
      - discovery.type=single-node
    volumes:
      - ./conf/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - core_portal_es_data:/usr/share/elasticsearch/data
    container_name: core_portal_elasticsearch
    ports:
      - 9200:9200

  postgres:
    image: postgres:11.5
    volumes:
      - core_portal_postgres_data:/var/lib/postgresql/data/portal
    container_name: core_portal_postgres
    environment:
      - POSTGRES_PASSWORD=dev
      - POSTGRES_USER=dev
      - POSTGRES_DB=dev
      - PGDATA=/var/lib/postgresql/data/portal

  postgrescms:
    image: postgres:11.5
    volumes:
      - core_cms_postgres_data:/var/lib/postgresql/data/portal
    container_name: core_cms_postgres
    environment:
      - POSTGRES_PASSWORD=taccforever
      - POSTGRES_USER=postgresadmin
      - POSTGRES_DB=taccsite
      - PGDATA=/var/lib/postgresql/data/portal

  protx:
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - ./protx:/app/protx
      - ~/protx-data:/protx-data
    ports:
      - 8000:8000
    dns:
      - 8.8.8.8
      - 8.8.4.4
    environment:
      - FLASK_APP=/app/protx/app.py
      - APP_ENV=development
    stdin_open: true
    tty: true
    container_name: protx
    hostname: protx
    command: "gunicorn -w 4 -b 0.0.0.0:8000 protx.app:app -k gevent --reload --timeout 300"
    restart: always

volumes:
  core_portal_redis_data:
  core_portal_es_data:
  core_portal_rabbitmq_data:
  core_portal_postgres_data:
  core_cms_postgres_data:
